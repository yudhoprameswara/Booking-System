@model BookingSystem.DataModel.Master.Room.CreateEditRoomVM


<form asp-action="UpsertResource" method="post" enctype="multipart/form-data">
    @if (Model != null && Model.Id > 0)
    {
        <input type="hidden" asp-for="Id" />
    }


    <table class="form-table">
        <thead>
        <th class="card-header-pills">Add New Room</th>
        </thead>
        <tbody>
            <tr>
                <td>
                    <label class="form-label">Room Name</label>
                </td>
                <td>
                    <input type="text" class="form-control" asp-for="Name">
                </td>
            </tr>

            <tr>
                <td>
                    <label class="form-label">Floor</label>
                </td>
                <td>
                    <input type="number" class="form-control" asp-for="floor"/>
                </td>
            </tr>

            <tr>
                <td>
                    <label class="form-label">Description Room</label>
                </td>
                <td>
                    <input type="text" class="form-control" asp-for="description">
                </td>
            </tr>

            <tr>
                <td>
                    <label class="form-label">Location</label>
                </td>
                <td>
             
                    <select asp-for="location" class="form-control" >
                             @foreach (var location in Model.locationDropdowns)
                        {
                            <option value="@location.id" selected="">  @location.location</option>
                        }
                    </select>
                    
                </td>
            </tr>

            <tr>
                <td>
                    <label class="form-label">Maximum Capacity of Room</label>
                </td>
                <td>
                    <input type="number" class="form-control" asp-for="capacity" />
                </td>
            </tr>

            @* <tr>
                <td>
                    Resource Code
                </td>
                <td class="table-input">
                    <a class="table-button" id="add-new-code"><i class="fas fa-plus-circle"></i> Add New Code</a>
                    <div class="table-overflow">
                        <table class="table-form">
                            <thead>
                                <tr>
                                    <th>IsActive</th>
                                    <th>Resource Code</th>
                                    <th></th>
                                </tr>
                            </thead>

                            <tbody id="codes-container">
                                @for (int i = 0; i < Model.code.Count; i++)
                                {
                                    <tr>
                                        @if (Model.code[i].Id > 0)
                                        {
                                            <input type="hidden" asp-for="@Model.code[i].Id" class="data-id" />
                                        }
                                        <td>
                                            <input asp-for="@Model.code[i].status" name="code[@i].status" />
                                            <span asp-validation-for="@Model.code[i].status"></span>
                                        </td>
                                        <td>
                                            <input class="table-form-inside" asp-for="@Model.code[i].ResourceCode" name="code[@i].ResourceCode" />
                                            <span asp-validation-for="@Model.code[i].ResourceCode"></span>
                                        </td>
                                        <td>
                                            <button type="button" class="remove-code-button">Remove</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </td>
            </tr> *@

            <tr>
                <td>
                    <label class="form-label">Colour Room</label>
                </td>
                <td>
                    <input type="color" class="form-control" asp-for="colour">
                </td>
            </tr>

        </tbody>
    </table>



    <button type="submit" class="btn btn-primary">Submit</button>
    <a class="btn btn-danger" asp-action="Index">Close</a>
</form>

@* @section Scripts {
    <script>
        document.getElementById('add-new-code').addEventListener('click', function () {
            var container = document.getElementById('codes-container');
            var index = container.getElementsByTagName('tr').length;
            var row = document.createElement('tr');

            row.innerHTML = `
                                <input type="hidden" name="code[${index}].Id" value="0" />
                                <td>
                                    <input type="checkbox" name="code[${index}].status" value="true" />
                                    <input type="hidden" name="code[${index}].status" value="false" />
                                    <span asp-validation-for="code[${index}].status"></span>
                                </td>
                                <td>
                                    <input class="table-form-inside" name="code[${index}].ResourceCode" type="text" />
                                    <span asp-validation-for="code[${index}].ResourceCode"></span>
                                </td>
                                <td>
                                    <button type="button" class="remove-code-button">Remove</button>
                                </td>
                            `;

            container.appendChild(row);

            // Add event listener to the new remove button
            row.querySelector('.remove-code-button').addEventListener('click', function () {
                handleRemoveRow(row);
            });
        });

        // Add event listeners to initial remove buttons
        document.querySelectorAll('.remove-code-button').forEach(button => {
            button.addEventListener('click', function () {
                handleRemoveRow(button.closest('tr'));
            });
        });

        function handleRemoveRow(row) {
            var idInput = row.querySelector('input[name$=".Id"]');
            var id = idInput ? idInput.value : null;

            if (id && id !== "0") {
                var xhr = new XMLHttpRequest();
                xhr.open("DELETE", `http://localhost:5196/api/Resource/code?id=${id}`, true);
                xhr.setRequestHeader("Content-Type", "application/json");
                xhr.onload = function () {
                    if (xhr.status >= 200 && xhr.status < 300) {
                        console.log('Successfully deleted:', xhr.responseText);
                    } else {
                        console.error('Failed to delete:', xhr.responseText);
                    }
                };
                xhr.onerror = function () {
                    console.error('Request error');
                };
                xhr.send();
            }

            row.remove();
        }
    </script>

} *@